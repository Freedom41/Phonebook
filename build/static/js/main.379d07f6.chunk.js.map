{"version":3,"sources":["services/phonebook.js","components/Names.js","components/Form.js","components/Search.js","services/notifications.js","services/error.js","index.js"],"names":["baseURL","axios","get","then","res","data","newObj","post","id","delete","put","Names","names","fil","del","trim","regex","RegExp","toLowerCase","nameList","map","ele","console","log","name","search","key","number","onClick","value","Form","change","val","newph","text","submitForm","onSubmit","e","type","onChange","Search","Notification","message","className","Error","error","ReactDOM","render","useState","persons","setPersons","newSearch","newName","setNewName","ph","setNewph","msg","newMsg","err","errorMsg","useEffect","dataEntries","person","catch","setTimeout","target","event","temp","tempPh","namePresent","every","phNum","preventDefault","window","confirm","idx","find","returnedEntries","concat","document","getElementById"],"mappings":"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","file":"static/js/main.379d07f6.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst baseURL = `/api/persons`;\n\nconst getAll = () => {\n    const req = axios.get(baseURL);\n    return req.then(res=> res.data)\n}\n\nconst post = (newObj) => {\n    const req = axios.post(baseURL, newObj);\n    return req.then(res => res.data)\n}\n\nconst removeEntry = (id, newObj) => {\n    const req =  axios.delete(`${baseURL}/${id}`, newObj);\n    return req.then(res => res.data)\n}\n\nconst update = (id, newObj) => {\n    const req = axios.put(`${baseURL}/${id}`, newObj);\n    return req.then(res => res.data)\n}\n\nexport default {\n    getAll: getAll,\n    post: post,\n    removeEntry: removeEntry,\n    update: update\n}\n\n\n\n\n\n\n\n","import React from 'react'\n\n\nconst Names = ({ names, fil, del }) => {\n    fil = fil.trim()\n\n    let regex = new RegExp(fil.toLowerCase(), \"g\");\n    let nameList = names.map((ele) => {\n        console.log(ele.name)\n        if (ele.name.toLowerCase().search(regex) > -1) {\n            return <div key={ele.name}>\n                <p>Name: {ele.name} Number: {ele.number} </p>\n                <button onClick={del} value={ele.id}> Delete </button> \n            </div>\n        }\n    })\n    return (\n        <div>\n            {nameList}\n        </div>\n    )\n\n\n}\n\nexport default Names;","import React from 'react'\n\n\nconst Form = ({ change, val, del }) => {\n    let newph = change[0];\n    let text = change[2];\n    let submitForm = change[1];\n\n    return(\n        <form onSubmit={(e) => submitForm(e)}>\n            <div>\n                name: <input type=\"text\" value={val[0]} onChange={(e) => text(e)} />\n            </div>\n            <div>\n                number: <input type=\"number\" value={val[1]} onChange={(e) => newph(e)} />\n            </div>\n            <div>\n                <button type=\"submit\">add</button>\n            </div>\n        </form>\n    )\n}\n\n\nexport default Form;","import React from 'react'\n\nconst Search = ({change, fil}) => {\n    return(\n        <div>\n            <input type=\"text\" value={fil} onChange={(e) => change(e)} />\n        </div>\n    )\n}\n\nexport default Search;","import React from 'react';\n\nconst Notification = ({message}) => {\n    if(message == null) {\n        return null\n    }\n    return(\n        <div className=\"msg\">\n            {message}\n        </div>\n    )\n}\n\nexport default Notification;","import React from 'react';\n\nconst Error = ({ error }) => {\n    if (error == null) {\n        return null\n    }\n    return (\n        <div className=\"err\">\n            {error}\n        </div>\n    )\n}\n\nexport default Error;","import React, { useState, useEffect } from 'react'\nimport './index.css'\nimport ReactDOM from 'react-dom';\n\nimport dataEntries from './services/phonebook';\nimport Names from './components/Names';\nimport Form from './components/Form';\nimport Search from './components/Search';\nimport Notification from './services/notifications';\nimport Error from './services/error';\n\nconst App = () => {\n\n    //State\n    const [persons, setPersons] = useState([]);\n\n    const [search, newSearch] = useState(\"\");\n    const [newName, setNewName] = useState('');\n    const [ph, setNewph] = useState(\"\");\n    const [msg, newMsg] = useState(null);\n    const [err, errorMsg] = useState(null);\n\n\n    //Sending request to server\n    useEffect(() => {\n        dataEntries.getAll()\n                   .then(person => {\n                        setPersons(person)\n                    })\n                    .catch(e => {\n                        let error = `Could not load numbers`\n                        errorMsg(error)\n                        setTimeout(() => {\n                            errorMsg(null)\n                        }, 5000)   \n                    })\n        }, [])\n\n    //handling change in input fields\n    const handleChange = (event) => {\n        setNewName(event.target.value)\n    }\n\n    //handling change in input fields\n    const handleSubmit = (event) => {\n        let temp = [...persons];\n        let tempPh = ph;\n\n        let namePresent = temp.every((ele) => ele.name !== newName)\n        let phNum = temp.every((ele) => ele.number !== tempPh)\n\n        if(!namePresent && !phNum) {\n            event.preventDefault()\n            let message = `${newName} already present`\n            newMsg(message)\n            setTimeout(() => {\n                newMsg(null)\n            }, 5000)\n        }\n\n        else if (!namePresent && phNum) {\n            event.preventDefault()\n            if(window.confirm('Do you want to update ?')) {\n            let idx = temp.find((ele) => ele.name == newName)\n            idx = idx.id;\n            let req = dataEntries.update(idx, {name: newName, number: ph})\n                req.then(() => {\n                    let message = `${newName} Updated`\n                    newMsg(message)\n                    setTimeout(() => {\n                        newMsg(null)\n                    }, 5000)\n                })\n                .catch(e => {\n                    let error = `Not Updated`\n                    errorMsg(error)\n                    setTimeout(() => {\n                        errorMsg(null)\n                    }, 5000)\n                })\n            }\n        }\n\n        else {\n            let req = dataEntries.post({ name: newName, number: tempPh})\n                req.then((returnedEntries) => { \n                        temp = [...persons]\n                        setPersons(temp.concat(returnedEntries));\n                        let message = `${newName} Added`\n                        newMsg(message)\n                        setTimeout(() => {\n                            newMsg(null)\n                        }, 5000)\n                    })\n                    .catch((e) => {\n                        let error = `Not Added`\n                        errorMsg(error)\n                        setTimeout(() => {\n                                errorMsg(null)\n                            }, 5000)    \n                        })\n\n            setNewName(\"\")\n            setNewph(\"\")\n            event.preventDefault();\n        }\n    }\n\n    const handleDel = (e) => {\n        let id = e.target.value;\n        \n        if(window.confirm('Do you want to delete ?')) {\n\n            let req = dataEntries.removeEntry(id)\n            req.then(() => {\n                let message = `Deleted`\n                newMsg(message)\n                setTimeout(() => {\n                    newMsg(null)\n                }, 5000) \n            })\n            .catch(e => {\n                let error = `Could not find User`\n                errorMsg(error)\n                setTimeout(() => {\n                    errorMsg(null)\n                }, 5000) \n            }) \n            \n        }\n    }\n\n    const handleph = (event) => {\n        setNewph(event.target.value)\n    }\n\n    const handleSearch = (e) => {\n       newSearch(e.target.value)\n    }\n\n    return (\n        <div>\n            <h2>Phonebook</h2>\n\n            <Search change={handleSearch} fil={search}/>\n\n            <Notification message={msg} />\n\n            <Error error={err} />\n\n            <Form change={[handleph, handleSubmit, handleChange]} val={[newName, ph]} />\n\n            <h2> Numbers </h2>\n                \n            <Names names={persons} fil={search} del={handleDel} />\n    </div>\n    )\n}\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}