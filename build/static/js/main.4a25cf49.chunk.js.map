{"version":3,"sources":["services/phonebook.js","components/Names.js","components/Form.js","components/Search.js","services/notifications.js","services/error.js","index.js"],"names":["baseURL","a","async","axios","get","req","data","newObj","post","id","delete","put","Names","names","fil","del","length","trim","regex","RegExp","toLowerCase","nameList","map","ele","name","search","key","number","onClick","value","_id","Form","change","val","newph","text","submitForm","onSubmit","e","type","onChange","Search","Notification","message","className","Error","error","ReactDOM","render","useState","persons","setPersons","newSearch","newName","setNewName","ph","setNewph","msg","newMsg","err","errorMsg","useEffect","dataEntries","then","person","catch","response","setTimeout","target","event","temp","tempPh","namePresent","every","phNum","preventDefault","window","confirm","idx","find","returnedEntries","document","getElementById"],"mappings":"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","file":"static/js/main.4a25cf49.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst baseURL = `/api/persons`;\n\nconst getAll = async () => {\n    const req = await axios.get(baseURL);\n    return req.data\n}\n\nconst post = async (newObj) => {\n    const req = await axios.post(baseURL, newObj);\n    return req.data\n}\n\nconst removeEntry = async (id) => {\n    const req =  await axios.delete(`${baseURL}/${id}`);\n    return req\n}\n\nconst update = async (id, newObj) => {\n    const req = await axios.put(`${baseURL}/${id}`, newObj);\n    return req.data\n}\n\nexport default {\n    getAll: getAll,\n    post: post,\n    removeEntry: removeEntry,\n    update: update\n}\n\n\n\n\n\n\n\n","import React from 'react'\n\nconst Names = ({ names, fil, del }) => {\n\n    if (names.length !== 0) { \n\n    fil = fil.trim()\n\n    let regex = new RegExp(fil.toLowerCase(), \"g\");\n\n    let nameList = names.map( (ele) => {\n\n        if (ele.name.toLowerCase().search(regex) > -1) {\n            return <div key={ele.name}>\n                <p>Name: {ele.name} Number: {ele.number} </p>\n                <button onClick={del} value={ele._id}> Delete </button> \n            </div>\n        } \n    })\n    return (\n        <div>\n            {nameList}\n        </div>\n    )\n  } else {\n      return (\n      <div>\n          <h1> Numbers not loaded </h1>\n      </div>\n      )\n  }\n}\n\nexport default Names;","import React from 'react'\n\n\nconst Form = ({ change, val}) => {\n    let newph = change[0];\n    let text = change[2];\n    let submitForm = change[1];\n\n    return(\n        <form onSubmit={(e) => submitForm(e)}>\n            <div>\n                name: <input type=\"text\" value={val[0]} onChange={(e) => text(e)} />\n            </div>\n            <div>\n                number: <input type=\"number\" value={val[1]} onChange={(e) => newph(e)} />\n            </div>\n            <div>\n                <button type=\"submit\">add</button>\n            </div>\n        </form>\n    )\n}\n\n\nexport default Form;","import React from 'react'\n\nconst Search = ({change, fil}) => {\n    return(\n        <div>\n            <input type=\"text\" value={fil} onChange={(e) => change(e)} />\n        </div>\n    )\n}\n\nexport default Search;","import React from 'react';\n\nconst Notification = ({message}) => {\n    if(message == null) {\n        return null\n    }\n    return(\n        <div className=\"msg\">\n            {message}\n        </div>\n    )\n}\n\nexport default Notification;","import React from 'react';\n\nconst Error = ({ error }) => {\n    if (error == null) {\n        return null\n    }\n    return (\n        <div className=\"err\">\n            {error}\n        </div>\n    )\n}\n\nexport default Error;","import React, { useState, useEffect } from 'react'\nimport './index.css'\nimport ReactDOM from 'react-dom';\n\nimport dataEntries from './services/phonebook';\nimport Names from './components/Names';\nimport Form from './components/Form';\nimport Search from './components/Search';\nimport Notification from './services/notifications';\nimport Error from './services/error';\n\nconst App = () => {\n\n    //State\n    const [persons, setPersons] = useState([]);\n\n    const [search, newSearch] = useState(\"\");\n    const [newName, setNewName] = useState('');\n    const [ph, setNewph] = useState(\"\");\n    const [msg, newMsg] = useState(null);\n    const [err, errorMsg] = useState(null);\n\n    //Sending request to server\n    useEffect(() => {\n\n        dataEntries.getAll()\n                   .then(person => {\n                        setPersons(person)\n                    })\n                    .catch(e => {\n                        let error = e.response.data.error;\n                        errorMsg(error)\n                        setTimeout(() => {\n                            errorMsg(null)\n                        }, 5000)   \n                    })\n        }, [])\n\n    //handling change in input fields\n    const handleChange = (event) => {\n        setNewName(event.target.value)\n    }\n\n    //handling change in input fields\n    const handleSubmit = (event) => {\n        let temp = [...persons];\n        let tempPh = ph;\n\n        let namePresent = temp.every((ele) => ele.name !== newName)\n        let phNum = temp.every((ele) => ele.number !== tempPh) \n\n        if(!namePresent && !phNum) {\n            event.preventDefault()\n            let message = `${newName} already present`\n            newMsg(message)\n            setTimeout(() => {\n                newMsg(null)\n            }, 5000)\n        }\n\n        else if (!namePresent && phNum) {\n            event.preventDefault()\n            if(window.confirm('Do you want to update ?')) {\n            let idx = temp.find((ele) => ele.name == newName)\n            idx = idx._id;\n\n            let req = dataEntries.update(idx, {name: newName, number: ph})\n                req.then(() => {\n                    let message = `${newName} Updated`\n                    newMsg(message)\n                    dataEntries.getAll()\n                        .then(person => {\n                            setPersons(person)\n                        })\n                        .catch(e => {\n                            let error = e.response.data.error;\n                            errorMsg(error)\n                            setTimeout(() => {\n                                errorMsg(null)\n                            }, 5000)\n                        })\n\n                    setTimeout(() => {\n                        newMsg(null)\n                    }, 5000)\n                    setNewName(\"\")\n                    setNewph(\"\")\n                })\n                .catch(e => {\n\n                    let error = e.response.data.error;\n                    errorMsg(error)\n                    setTimeout(() => {\n                        errorMsg(null)\n                    }, 5000)\n                })\n            }\n        }\n\n        else {\n            \n            let req = dataEntries.post({ name: newName, number: tempPh});\n\n                req.then((returnedEntries) => { \n                        temp = [...persons]\n                        setPersons(returnedEntries);\n                        let message = `${newName} Added`\n                        newMsg(message)\n                        setTimeout(() => {\n                            newMsg(null)\n                        }, 5000)\n\n                    dataEntries.getAll()\n                        .then(person => {\n                            setPersons(person)\n                        })\n                        .catch(e => {\n                            let error = e.response.data.error;\n                            errorMsg(error)\n                            setTimeout(() => {\n                                errorMsg(null)\n                            }, 5000)\n                        })\n                    })\n                    .catch((e) => {\n                        let error = e.response.data.error;\n                        errorMsg(error)\n                        setTimeout(() => {\n                                errorMsg(null)\n                            }, 5000)    \n                        })\n            setNewName(\"\")\n            setNewph(\"\")\n            event.preventDefault();\n        }\n    }\n\n    const handleDel = async (e) => {\n        let id = e.target.value;\n      \n        if(window.confirm('Do you want to delete ?')) {\n\n            let req = await dataEntries.removeEntry(id);\n\n            if(req.data) {\n                newMsg(req.data)\n                dataEntries.getAll()\n                           .then(person => {\n                               setPersons(person)\n                           })\n                           .catch(e => {\n                               let error = e.response.data.error;\n                               errorMsg(error)\n                               setTimeout(() => {\n                                   errorMsg(null)\n                               }, 5000)  \n                           })\n                setTimeout(() => {\n                    newMsg(null)\n                }, 5000)   \n            }\n            else {\n                let error = `Could not find User`\n                errorMsg(error)\n                setTimeout(() => {\n                    errorMsg(null)\n                }, 5000) \n            }\n        }\n        setNewName(\"\")\n        setNewph(\"\")\n    }\n\n    const handleph = (event) => {\n        setNewph(event.target.value)\n    }\n\n    const handleSearch = (e) => {\n       newSearch(e.target.value)\n    }\n\n    return (\n        <div>\n            <h2>Phonebook</h2>\n\n            <Search change={handleSearch} fil={search}/>\n\n            <Notification message={msg} />\n\n            <Error error={err} />\n\n            <Form change={[handleph, handleSubmit, handleChange]} val={[newName, ph]} />\n\n            <h2> Numbers </h2>\n                \n            <Names names={persons} fil={search} del={handleDel} />\n    </div>\n    )\n}\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}